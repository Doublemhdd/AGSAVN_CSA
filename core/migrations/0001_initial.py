# Generated by Django 5.0.2 on 2025-04-23 03:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "code",
                    models.CharField(
                        choices=[
                            ("food", "Food Security"),
                            ("nutrition", "Nutrition"),
                            ("water", "Water and Hygiene"),
                            ("vulnerability", "Vulnerability"),
                            ("agriculture", "Agriculture"),
                            ("livestock", "Livestock"),
                            ("market", "Market"),
                        ],
                        max_length=20,
                        unique=True,
                        verbose_name="code",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "code",
                    models.CharField(max_length=50, unique=True, verbose_name="code"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "region",
                "verbose_name_plural": "regions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SystemLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "component",
                    models.CharField(max_length=255, verbose_name="component"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("operational", "Operational"),
                            ("degraded", "Degraded Performance"),
                            ("down", "Down"),
                        ],
                        default="operational",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "message",
                    models.TextField(blank=True, null=True, verbose_name="message"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "system log",
                "verbose_name_plural": "system logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="full name"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("ADMIN", "Administrator"), ("USER", "User")],
                        default="USER",
                        max_length=10,
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("action", models.CharField(max_length=255, verbose_name="action")),
                (
                    "details",
                    models.TextField(blank=True, null=True, verbose_name="details"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "activity log",
                "verbose_name_plural": "activity logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        default="medium",
                        max_length=20,
                        verbose_name="severity",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("REJECTED", "Rejected"),
                            ("RESOLVED", "Resolved"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "threshold_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="threshold value"
                    ),
                ),
                (
                    "threshold_type",
                    models.CharField(
                        choices=[("low", "Low"), ("high", "High")],
                        max_length=10,
                        verbose_name="threshold type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "handled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="handled_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="handled by",
                    ),
                ),
            ],
            options={
                "verbose_name": "alert",
                "verbose_name_plural": "alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AlertAction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("approve", "Approve"),
                            ("reject", "Reject"),
                            ("resolve", "Resolve"),
                            ("comment", "Comment"),
                        ],
                        max_length=20,
                        verbose_name="action",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="comment"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "alert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="core.alert",
                        verbose_name="alert",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alert_actions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "alert action",
                "verbose_name_plural": "alert actions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Indicator",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="unit"
                    ),
                ),
                (
                    "documentation_link",
                    models.URLField(
                        blank=True, null=True, verbose_name="documentation link"
                    ),
                ),
                (
                    "alert_threshold_low",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="alert threshold low",
                    ),
                ),
                (
                    "alert_threshold_high",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="alert threshold high",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[("RAPID", "Rapid"), ("INFORMATIVE", "Informative")],
                        default="INFORMATIVE",
                        max_length=15,
                        verbose_name="alert type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicators",
                        to="core.category",
                        verbose_name="category",
                    ),
                ),
            ],
            options={
                "verbose_name": "indicator",
                "verbose_name_plural": "indicators",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="value"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="source"
                    ),
                ),
                ("date", models.DateField(verbose_name="date")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "indicator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="core.indicator",
                        verbose_name="indicator",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="core.region",
                        verbose_name="region",
                    ),
                ),
            ],
            options={
                "verbose_name": "measurement",
                "verbose_name_plural": "measurements",
                "ordering": ["-date", "indicator"],
            },
        ),
        migrations.AddField(
            model_name="alert",
            name="measurement",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alerts",
                to="core.measurement",
                verbose_name="measurement",
            ),
        ),
        migrations.AddConstraint(
            model_name="measurement",
            constraint=models.UniqueConstraint(
                fields=("indicator", "region", "date"), name="unique_measurement"
            ),
        ),
    ]
